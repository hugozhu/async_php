daemon on;
master_process on;
worker_processes 1;
error_log logs/error.log warn;
#user ec2-user ec2-user;

events {
    worker_connections 10240;
}

http {
    access_log off;
    server_tokens off;

    server {
	root "__root__/html/";
        listen 80;
	location ~ .php$ {
		fastcgi_split_path_info ^(.+\.php)(.*)$;
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include fastcgi_params;
		fastcgi_intercept_errors        on;
		fastcgi_ignore_client_abort     off;
		fastcgi_connect_timeout 60;
		fastcgi_send_timeout 180;
		fastcgi_read_timeout 180;
		fastcgi_buffer_size 128k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
	}

	location /lua {
	    content_by_lua '
	        local res = ngx.location.capture("/before_dispatch.php");
	        ngx.print(res.body);

	        local socket = ngx.socket.tcp();
	        socket:setkeepalive(1000 * 30,100);
	        socket:settimeout(1000);
	        local ok, err = socket:connect("119.42.225.155", 80);
	        local req = "GET /30ms.php HTTP/1.0\\r\\n\\r\\n";
	        local bytes, err = socket:send(req);
	        local line,  err = socket:receive("*a");
	        ngx.print(line);
	        socket:close();

	        res = ngx.location.capture("/after_dispatch.php");
	        ngx.print(res.body);
	    ';
	}

    }
}

